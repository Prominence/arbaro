/*
 * This file is generated by jOOQ.
 */
package com.github.prominence.arbaro.db;


import com.github.prominence.arbaro.db.tables.Databasechangelog;
import com.github.prominence.arbaro.db.tables.Databasechangeloglock;
import com.github.prominence.arbaro.db.tables.Role;
import com.github.prominence.arbaro.db.tables.User;
import com.github.prominence.arbaro.db.tables.User2role;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -1406892112;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.databasechangelog</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = com.github.prominence.arbaro.db.tables.Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>public.databasechangeloglock</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = com.github.prominence.arbaro.db.tables.Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>public.role</code>.
     */
    public final Role ROLE = com.github.prominence.arbaro.db.tables.Role.ROLE;

    /**
     * The table <code>public.user</code>.
     */
    public final User USER = com.github.prominence.arbaro.db.tables.User.USER;

    /**
     * The table <code>public.user2role</code>.
     */
    public final User2role USER2ROLE = com.github.prominence.arbaro.db.tables.User2role.USER2ROLE;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            Role.ROLE,
            User.USER,
            User2role.USER2ROLE);
    }
}
